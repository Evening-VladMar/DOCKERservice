{"ast":null,"code":"var _jsxFileName = \"A:\\\\Dev\\\\docker_web_service\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState(null);\n  const [techStack, setTechStack] = useState(\"python:3.8\");\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleSubmit = async () => {\n    if (!selectedFiles) {\n      alert(\"Пожалуйста, выберите файл!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"project_files\", selectedFiles[0]); // Обработка выбранного файла\n    formData.append(\"tech_stack\", techStack); // Передача стека технологий\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/create_docker_image/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await response.json();\n      console.log(result);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Docker Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setTechStack(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python:3.8\",\n        children: \"Python 3.8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"node:14\",\n        children: \"Node 14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Create Docker Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"EHTCe2yPx2clwCd1IfHWQ91+6U0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedFiles","setSelectedFiles","techStack","setTechStack","handleFileChange","e","target","files","handleSubmit","alert","formData","FormData","append","response","fetch","method","body","result","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","value","onClick","_c","$RefreshReg$"],"sources":["A:/Dev/docker_web_service/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    const [selectedFiles, setSelectedFiles] = useState(null);\n    const [techStack, setTechStack] = useState(\"python:3.8\");\n\n    const handleFileChange = (e) => {\n        setSelectedFiles(e.target.files);\n    };\n\n    const handleSubmit = async () => {\n        if (!selectedFiles) {\n            alert(\"Пожалуйста, выберите файл!\");\n            return;\n        }\n        \n        const formData = new FormData();\n        formData.append(\"project_files\", selectedFiles[0]);  // Обработка выбранного файла\n        formData.append(\"tech_stack\", techStack);           // Передача стека технологий\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/create_docker_image/\", {\n                method: \"POST\",\n                body: formData\n            });\n\n            const result = await response.json();\n            console.log(result);\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Docker Image Generator</h1>\n            <input type=\"file\" onChange={handleFileChange} />\n            <select onChange={(e) => setTechStack(e.target.value)}>\n                <option value=\"python:3.8\">Python 3.8</option>\n                <option value=\"node:14\">Node 14</option>\n            </select>\n            <button onClick={handleSubmit}>Create Docker Image</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,YAAY,CAAC;EAExD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,gBAAgB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,aAAa,EAAE;MAChBS,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEZ,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;IACrDU,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEV,SAAS,CAAC,CAAC,CAAW;;IAEpD,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD7B,OAAA;MAAQ+B,QAAQ,EAAGvB,CAAC,IAAKF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACuB,KAAK,CAAE;MAAAP,QAAA,gBAClDzB,OAAA;QAAQgC,KAAK,EAAC,YAAY;QAAAP,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9C7B,OAAA;QAAQgC,KAAK,EAAC,SAAS;QAAAP,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACT7B,OAAA;MAAQiC,OAAO,EAAEtB,YAAa;MAAAc,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd;AAAC3B,EAAA,CA1CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}